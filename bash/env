# Set locale and encoding
LANG="en_US.UTF-8"
LANGUAGE="en"
LC_CTYPE="en_US.UTF-8"
LC_ALL="en_US.UTF-8"
export LANG LANGUAGE LC_CTYPE LC_ALL

# Paths
PATH='/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin'

if [ -d "$HOME/.bin" ]; then
  PATH="$HOME/.bin:$PATH"
fi

if [[ -d '/Applications/Postgres.app/Contents/Versions' && -f "$HOME/.pg-version" ]]; then
  postgres_version="$(cut -f 1 < ~/.pg-version)"
  postgres_bin_dir="/Applications/Postgres.app/Contents/Versions/${postgres_version}/bin"
  PATH="$PATH:$postgres_bin_dir"
fi

if [ -d '/Applications/Keybase.app/Contents/SharedSupport/bin' ]; then
  PATH="$PATH:/Applications/Keybase.app/Contents/SharedSupport/bin"
fi

if [ -d '/Applications/MacVim.app/Contents/bin' ]; then
  PATH="$PATH:/Applications/MacVim.app/Contents/bin"
fi

if [ -d '/Applications/Sublime Text.app/Contents/SharedSupport/bin' ]; then
  PATH="$PATH:/Applications/Sublime Text.app/Contents/SharedSupport/bin"
fi

if [ -d "$HOME/.cargo/bin" ]; then
  PATH="$HOME/.cargo/bin:$PATH"
fi

if [ -d "$HOME/.yarn/bin" ]; then
  PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"
fi

export BUN_INSTALL="$HOME/.bun"
if [ -d $BUN_INSTALL ]; then
  PATH="$BUN_INSTALL/bin:$PATH"
fi

export PATH

# Homebrew
if [ -x /opt/homebrew/bin/brew ]; then
  eval $(/opt/homebrew/bin/brew shellenv)
elif [ -x /usr/local/bin/brew ]; then
  eval $(/usr/local/bin/brew shellenv)
fi

# Editor and pager
if [ -x /usr/local/bin/code ]; then
  EDITOR=/usr/local/bin/code
elif [ -x /usr/local/bin/zed ]; then
  EDITOR=/usr/local/bin/zed
elif [ -x /Applications/MacVim.app/Contents/bin/mvim ]; then
  EDITOR='/Applications/MacVim.app/Contents/bin/mvim -f --nomru -c "au VimLeave * !open -a Terminal"'
else
  EDITOR=vim
fi

PAGER="less -R"
LESSHISTFILE="-"

export EDITOR PAGER LESSHISTFILE

# Colors
CLICOLOR=1
GREP_OPTIONS="--color=auto"
GREP_COLOR="1;32"
export CLICOLOR GREP_OPTIONS GREP_COLOR

# Silence macOS Bash deprecation warning
export BASH_SILENCE_DEPRECATION_WARNING=1

# GPG
export GPG_TTY=$(tty)

# Use 1Password SSH agent
# https://developer.1password.com/docs/ssh
if [ -r "$HOME/Library/Group Containers/2BUA8C4S2C.com.1password/t/agent.sock" ]; then
  export SSH_AUTH_SOCK="$HOME/Library/Group Containers/2BUA8C4S2C.com.1password/t/agent.sock"
fi
